
test.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <_Z3addii>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	89 7d fc             	mov    %edi,-0x4(%rbp)
   7:	89 75 f8             	mov    %esi,-0x8(%rbp)
   a:	8b 55 fc             	mov    -0x4(%rbp),%edx
   d:	8b 45 f8             	mov    -0x8(%rbp),%eax
  10:	01 d0                	add    %edx,%eax
  12:	5d                   	pop    %rbp
  13:	c3                   	ret

0000000000000014 <_Z3addff>:
  14:	55                   	push   %rbp
  15:	48 89 e5             	mov    %rsp,%rbp
  18:	f3 0f 11 45 fc       	movss  %xmm0,-0x4(%rbp)
  1d:	f3 0f 11 4d f8       	movss  %xmm1,-0x8(%rbp)
  22:	f3 0f 10 45 fc       	movss  -0x4(%rbp),%xmm0
  27:	f3 0f 58 45 f8       	addss  -0x8(%rbp),%xmm0
  2c:	5d                   	pop    %rbp
  2d:	c3                   	ret

000000000000002e <main>:
  2e:	55                   	push   %rbp
  2f:	48 89 e5             	mov    %rsp,%rbp
  32:	48 83 ec 10          	sub    $0x10,%rsp
  36:	c7 45 fc 45 00 00 00 	movl   $0x45,-0x4(%rbp)
  3d:	c7 45 f8 a4 01 00 00 	movl   $0x1a4,-0x8(%rbp)
  44:	f3 0f 10 05 00 00 00 	movss  0x0(%rip),%xmm0        # 4c <main+0x1e>
  4b:	00 
  4c:	f3 0f 11 45 f4       	movss  %xmm0,-0xc(%rbp)
  51:	f3 0f 10 05 00 00 00 	movss  0x0(%rip),%xmm0        # 59 <main+0x2b>
  58:	00 
  59:	f3 0f 11 45 f0       	movss  %xmm0,-0x10(%rbp)
  5e:	8b 55 f8             	mov    -0x8(%rbp),%edx
  61:	8b 45 fc             	mov    -0x4(%rbp),%eax
  64:	89 d6                	mov    %edx,%esi
  66:	89 c7                	mov    %eax,%edi
  68:	e8 00 00 00 00       	call   6d <main+0x3f>
  6d:	f3 0f 10 45 f0       	movss  -0x10(%rbp),%xmm0
  72:	8b 45 f4             	mov    -0xc(%rbp),%eax
  75:	0f 28 c8             	movaps %xmm0,%xmm1
  78:	66 0f 6e c0          	movd   %eax,%xmm0
  7c:	e8 00 00 00 00       	call   81 <main+0x53>
  81:	b8 00 00 00 00       	mov    $0x0,%eax
  86:	c9                   	leave
  87:	c3                   	ret

Disassembly of section .rodata:

0000000000000000 <_ZNSt8__detail30__integer_to_chars_is_unsignedIjEE>:
   0:	01                 	add    %eax,(%rcx)

0000000000000001 <_ZNSt8__detail30__integer_to_chars_is_unsignedImEE>:
   1:	01                 	add    %eax,(%rcx)

0000000000000002 <_ZNSt8__detail30__integer_to_chars_is_unsignedIyEE>:
   2:	01 00                	add    %eax,(%rax)
   4:	cd cc                	int    $0xcc
   6:	dc 40 66             	faddl  0x66(%rax)
   9:	66                   	data16
   a:	86                   	.byte 0x86
   b:	40                   	rex

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	00 47 43             	add    %al,0x43(%rdi)
   3:	43 3a 20             	rex.XB cmp (%r8),%spl
   6:	28 47 4e             	sub    %al,0x4e(%rdi)
   9:	55                   	push   %rbp
   a:	29 20                	sub    %esp,(%rax)
   c:	31 33                	xor    %esi,(%rbx)
   e:	2e 33 2e             	cs xor (%rsi),%ebp
  11:	31 20                	xor    %esp,(%rax)
  13:	32 30                	xor    (%rax),%dh
  15:	32 34 30             	xor    (%rax,%rsi,1),%dh
  18:	35 32 32 20 28       	xor    $0x28203232,%eax
  1d:	52                   	push   %rdx
  1e:	65 64 20 48 61       	gs and %cl,%fs:0x61(%rax)
  23:	74 20                	je     45 <main+0x17>
  25:	31 33                	xor    %esi,(%rbx)
  27:	2e 33 2e             	cs xor (%rsi),%ebp
  2a:	31                   	.byte 0x31
  2b:	2d                   	.byte 0x2d
  2c:	31 29                	xor    %ebp,(%rcx)
	...

Disassembly of section .note.gnu.property:

0000000000000000 <.note.gnu.property>:
   0:	04 00                	add    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	20 00                	and    %al,(%rax)
   6:	00 00                	add    %al,(%rax)
   8:	05 00 00 00 47       	add    $0x47000000,%eax
   d:	4e 55                	rex.WRX push %rbp
   f:	00 02                	add    %al,(%rdx)
  11:	00 01                	add    %al,(%rcx)
  13:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
  17:	00 01                	add    %al,(%rcx)
  19:	00 00                	add    %al,(%rax)
  1b:	00 00                	add    %al,(%rax)
  1d:	00 00                	add    %al,(%rax)
  1f:	00 01                	add    %al,(%rcx)
  21:	00 01                	add    %al,(%rcx)
  23:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
  27:	00 09                	add    %cl,(%rcx)
  29:	00 00                	add    %al,(%rax)
  2b:	00 00                	add    %al,(%rax)
  2d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .eh_frame:

0000000000000000 <.eh_frame>:
   0:	14 00                	adc    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	00 00                	add    %al,(%rax)
   6:	00 00                	add    %al,(%rax)
   8:	01 7a 52             	add    %edi,0x52(%rdx)
   b:	00 01                	add    %al,(%rcx)
   d:	78 10                	js     1f <.eh_frame+0x1f>
   f:	01 1b                	add    %ebx,(%rbx)
  11:	0c 07                	or     $0x7,%al
  13:	08 90 01 00 00 1c    	or     %dl,0x1c000001(%rax)
  19:	00 00                	add    %al,(%rax)
  1b:	00 1c 00             	add    %bl,(%rax,%rax,1)
  1e:	00 00                	add    %al,(%rax)
  20:	00 00                	add    %al,(%rax)
  22:	00 00                	add    %al,(%rax)
  24:	14 00                	adc    $0x0,%al
  26:	00 00                	add    %al,(%rax)
  28:	00 41 0e             	add    %al,0xe(%rcx)
  2b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  31:	4f 0c 07             	rex.WRXB or $0x7,%al
  34:	08 00                	or     %al,(%rax)
  36:	00 00                	add    %al,(%rax)
  38:	1c 00                	sbb    $0x0,%al
  3a:	00 00                	add    %al,(%rax)
  3c:	3c 00                	cmp    $0x0,%al
  3e:	00 00                	add    %al,(%rax)
  40:	00 00                	add    %al,(%rax)
  42:	00 00                	add    %al,(%rax)
  44:	1a 00                	sbb    (%rax),%al
  46:	00 00                	add    %al,(%rax)
  48:	00 41 0e             	add    %al,0xe(%rcx)
  4b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  51:	55                   	push   %rbp
  52:	0c 07                	or     $0x7,%al
  54:	08 00                	or     %al,(%rax)
  56:	00 00                	add    %al,(%rax)
  58:	1c 00                	sbb    $0x0,%al
  5a:	00 00                	add    %al,(%rax)
  5c:	5c                   	pop    %rsp
  5d:	00 00                	add    %al,(%rax)
  5f:	00 00                	add    %al,(%rax)
  61:	00 00                	add    %al,(%rax)
  63:	00 5a 00             	add    %bl,0x0(%rdx)
  66:	00 00                	add    %al,(%rax)
  68:	00 41 0e             	add    %al,0xe(%rcx)
  6b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  71:	02 55 0c             	add    0xc(%rbp),%dl
  74:	07                   	(bad)
  75:	08 00                	or     %al,(%rax)
	...
